@page "/cart/edit/{id:int}"
@inject ICartService db
@inject NavigationManager nav
<h3>Edit Cart Item</h3>
<div class="summary">
    <EditForm Model="cat" OnValidSubmit="Edit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <h2>@cat.ItemName</h2>
        @if (cat.ImageUrl != null)
        {
            <img src="@cat.ImageUrl" class="imgg" />
        }
        <h4>Price: Rs @cat.Price</h4>
        <div class="form-group">
            <lable>Quantity</lable>
            <InputNumber @bind-Value="cat.Qty" class="form-control"></InputNumber>
        </div>
        <div class="form-group py-2">
            <button class="btn btn-success" type="submit">Save Changes</button>
            <NavLink href="cart/mycart" class="btn btn-secondary">Back</NavLink>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public int id { get; set; }
    private MyOrder cat { get; set; } = new MyOrder();
    Cart c = new Cart();
    string data = Authorize.getusertype();
    protected async override Task OnInitializedAsync()
    {
        if(data.Equals("User"))
        {
            cat = await db.GetCartItem(id);
        }
        else
        {
            nav.NavigateTo("login/register");
        }

    }
    private async void Edit()
    {
        if(data.Equals("User"))
        {
            c.Id = cat.Id;
            c.Qty = cat.Qty;
            c.Price = cat.Price;
            c.ItemId = cat.isdelivered;
            c.UserId = Authorize.getempid();
            var d = await db.EditItem(c);
            nav.NavigateTo("cart/mycart");
        }
        else
        {
            nav.NavigateTo("login/register");
        }


    }
}

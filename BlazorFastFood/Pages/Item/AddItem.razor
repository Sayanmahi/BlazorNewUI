@page "/item/additem"
@inject IItemService db
@inject ICategoryService db1
@inject NavigationManager nav
<h3 class="card-title text-primary mb-3 ml-3">Create Items</h3>
<div class="summary">
    <h2>Create a New Item</h2>
    <EditForm Model="cat" OnValidSubmit="Create">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <lable>Product Name</lable>
            <InputText @bind-Value="cat.ProdName" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <lable>Image Url</lable>
            <InputText @bind-Value="cat.ImageUrl" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <lable>Price(Rs.)</lable>
            <InputNumber @bind-Value="cat.Price" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <lable>Description</lable>
            <InputText @bind-Value="cat.Description" class="form-control"></InputText>
        </div>

        <div class="form-group py-2 col-6">
            <lable>Select Category</lable>
            <InputSelect @bind-Value="cat.CategoryId" class="form-control">
                <option value="0" disabled="disabled" selected>--Seelct Category--</option>
                @foreach (var i in cat1)
                {
                    <option value="@i.Id">@i.Name</option>
                }
            </InputSelect>
            <div class="form-group py-2">
                <button class="btn btn-success" type="submit">Create</button>
                <NavLink href="category/categoryList" class="btn btn-secondary">Back</NavLink>
            </div>
        </div>

    </EditForm>
</div>
@code {
    private Item cat { get; set; } = new Item();
    private List<Category> cat1 = new List<Category>();
    protected async override Task OnInitializedAsync()
    {
        string d = Authorize.getusertype();
        if (d.Equals("Admin"))
        {
            cat1 = await db1.GetAllCategories();
        }
        else
        {
            nav.NavigateTo("login/register");
        }

    }
    private async void Create()
    {
        string d1 = Authorize.getusertype();
        if (d1.Equals("Admin"))
        {
            var d = await db.AddItem(cat);
            nav.NavigateTo("item/getall");
        }
        else
        {
            nav.NavigateTo("login/register");
        }

    }

}

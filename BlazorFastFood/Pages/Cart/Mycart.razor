@page "/cart/mycart"
@inject NavigationManager nav
@inject ICartService db
@inject IOrderService db1
<div class="row mt-4">
    <br />
    <br />
    <div class="col-12">
        @if (cat.Any())
        {
            <div class="summary"><h2>My Cart(@cartno Items)</h2></div>
            <div class="container">
                <div class="card">
                    <h2>Multiple Order</h2>
                    <div class="row g-3">
                    <div class="col-12 col-sm-6">
                            <MultiSelect Items="@getord1"  @bind-Value="@aa1" PlaceHolder="Select To Order" />
                            
                    </div>
                    </div>
                    <Button @onclick="Multiorder" class="buttongreen">Multi Order</Button>
                    @foreach (var d in cat)
                    {
                        <div class="content">
                        <h2>@d.ItemName</h2>
                        <div class="img-wt-des">
                        <img src="@d.ImageUrl" class="imgg"/>
                        <div class="des">
                        <h5><b>Quantity: </b>@d.Qty <br/> <b>Price:</b>Rs @d.Price</h5>
                        </div>
                        </div>
                        <br/>


                           
                                <NavLink href="@($"order/myorder/{uid}/{d.Id}")" class="buttongreen">Placeorder</NavLink>
                                <NavLink href="@($"cart/edit/{d.Id}")" class="buttonbrown">Edit Order</NavLink>
                                <NavLink href="@($"cart/deletefromcart/{d.Id}")" class="buttongreen">Delete</NavLink>
                            </div>
                            <hr/>
                    }
                    </div>
                    </div>
        }
        else
        {
            <div class="summary">
            <h4 class="card-title text-black-info">No Items in Cart.</h4>
            </div>
        }
    </div>
</div>

@code {
    private List<MyOrder> cat = new List<MyOrder>();
    public List<MyOrder> sendlist = new List<MyOrder>();
    public System.Collections.Generic.IEnumerable<BootstrapBlazor.Components.SelectedItem> getord;
    public List<BootstrapBlazor.Components.SelectedItem> getord1 = new List<BootstrapBlazor.Components.SelectedItem>();
    public List<BootstrapBlazor.Components.SelectedItem> newgo = new List<BootstrapBlazor.Components.SelectedItem>();
    public List<int> aa1 = new List<int>();
    public int uid = Authorize.getempid();
    public int cartno = 0;
    protected async override Task OnInitializedAsync()
    {
        string data = Authorize.getusertype();
        if(data.Equals("User"))
        {
            int d = Authorize.getempid();
            cat = await db.ShowMyCart(d);
            cartno = await db.ItemsInCart(d);
            //newgo = await db.EnumerOrder(d);
            foreach(var i in cat)
            {
                var selectedItem = new BootstrapBlazor.Components.SelectedItem
                    {
                        Value = Convert.ToString(i.Id),
                        Text = i.ItemName
                    };
                getord1.Add(selectedItem);

            }
        }
        else
        {
            nav.NavigateTo("login/register");
        }


    }
    private async Task Multiorder()
    {
        MyOrder myOrder = new MyOrder()
            {
                uid = uid,
                cartids=aa1
    };
        var d = await db1.PlaceListOrder(myOrder);
        nav.NavigateTo("cart/mycart");
    }

}
